name: Check External References
on:
  workflow_dispatch: # Manuelles Auslösen
  schedule:
    - cron: "0 7 * * *" # Täglich um 7 Uhr UTC

permissions:
  contents: read

jobs:
  check-and-update:
    runs-on: ubuntu-latest # Enthält schon Podman vorinstalliert
    permissions:
      contents: write # Erforderlich zum Pushen von Änderungen
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Get latest go dependencies versions
        id: go
        run: |
          # Get latest tag for caddy-crowdsec-bouncer
          tag1=$(git ls-remote --tags https://github.com/hslatman/caddy-crowdsec-bouncer.git | \
            awk -F/ '{print $3}' | grep -E '^v?[0-9]+\.[0-9]+\.[0-9]+$' | sort -V | tail -n1)
          # Get latest tag for caddy-dns-inwx
          tag2=$(git ls-remote --tags https://github.com/caddy-dns/inwx.git | \
            awk -F/ '{print $3}' | grep -E '^v?[0-9]+\.[0-9]+\.[0-9]+$' | sort -V | tail -n1)
          echo "caddy-crowdsec-bouncer=$tag1" >> $GITHUB_OUTPUT
          echo "caddy-dns-inwx=$tag2" >> $GITHUB_OUTPUT

      - name: Get latest container image version label with Podman # Does not work to get the labels. Check the command.
        id: image
        run: |
          podman pull docker.io/caddy:builder
          version=$(podman inspect --format '{{range .Config.Env}}{{if (eq (index (split . "=") 0) "CADDY_VERSION")}}{{index (split . "=") 1}}{{end}}{{end}}' docker.io/caddy:builder)
          echo "caddy-image=$version" >> $GITHUB_OUTPUT

      - name: Compare and update refs.txt if needed
        id: update
        run: |

          # Load existing refs.txt if it exists
          if [ -f refs.txt ]; then
            file=refs.txt
            . <(sed 's/-/_/g' "$file")
          fi
          changed=0

          # Clean up and update caddy-crowdsec-bouncer
          sed -i '/^caddy-crowdsec-bouncer=/d' $file
          if [ -n "${{ steps.go.outputs.caddy-crowdsec-bouncer }}" ]; then
            echo "caddy-crowdsec-bouncer=${{ steps.go.outputs.caddy-crowdsec-bouncer }}" >> $file
            changed=1
          fi

          # Clean up and update caddy-dns-inwx
          sed -i '/^caddy-dns-inwx=/d' $file
          if [ -n "${{ steps.go.outputs.caddy-dns-inwx }}" ]; then
            echo "caddy-dns-inwx=${{ steps.go.outputs.caddy-dns-inwx }}" >> $file
            changed=1
          fi

          # Clean up and update caddy-image
          sed -i '/^caddy-image=/d' $file
          if [ -n "${{ steps.image.outputs.caddy-image }}" ]; then
            echo "caddy-image=${{ steps.image.outputs.caddy-image }}" >> $file
            changed=1
          fi

          # Remove empty lines from refs.txt
          sed -i '/^$/d' $file

      - name: Commit and push refs.txt
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          git config --global user.email "bot@altmann.it"
          git config --global user.name "GitHub Actions Bot"
          git add refs.txt
          if ! git diff --cached --exit-code; then
            git commit -m "Update external references"
            git push
          else
            echo "No changes to refs.txt, skipping commit."
          fi
